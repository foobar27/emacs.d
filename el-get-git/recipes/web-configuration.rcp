(:name web-configuration
       :type builtin
       :depends (web-mode
		 angular-snippets
		 tern)
       :after (progn
		(require 'web-mode)
		(add-to-list 'auto-mode-alist '("\\.html?\\'" . web-mode))
		(add-to-list 'auto-mode-alist '("\\.phtml\\'" . web-mode)) 
		(add-to-list 'auto-mode-alist '("\\.tpl\\.php\\'" . web-mode))
		(add-to-list 'auto-mode-alist '("\\.jsp\\'" . web-mode))
		(add-to-list 'auto-mode-alist '("\\.as[cp]x\\'" . web-mode))
		(add-to-list 'auto-mode-alist '("\\.erb\\'" . web-mode))
		(add-to-list 'auto-mode-alist '("\\.mustache\\'" . web-mode))
		(add-to-list 'auto-mode-alist '("\\.djhtml\\'" . web-mode))
		(setq web-mode-enable-css-colorization t)
		(setq web-mode-enable-auto-pairing t)
		(setq web-mode-enable-block-face t)
		(setq web-mode-enable-comment-keywords t)

		(setq web-mode-markup-indent-offset 2)
		(setq web-mode-css-indent-offset 2)
		(setq web-mode-code-indent-offset 2)

		(add-hook 'web-mode-hook 'yas-minor-mode)
		;; (defun my-web-mode-hook ()
		;;   (setq web-mode-enable-auto-pairing nil))
		;; (add-hook 'web-mode-hook 'my-web-mode-hook)
		;; (defun sp-web-mode-is-code-context (id action context)
		;;   (when (and (eq action 'insert)
		;; 	     (not (or (get-text-property (point) 'part-side)
		;; 		      (get-text-property (point) 'block-side)))) t))
		;; (sp-local-pair 'web-mode "<" nil :when '(sp-web-mode-is-code-context))

		(define-key web-mode-map (kbd "C-c C-d") 'ng-snip-show-docs-at-point)


		(setq js-indent-level 2)

		 (require 'angular-snippets)
		 ;;(add-hook 'web-mode-hook #'(lambda () (set (make-local-variable 'yas-extra-modes) 'html-mode)))

		 (autoload 'tern-mode "tern.el" nil t)
		 (add-hook 'js-mode-hook (lambda () (tern-mode t)))
		 (eval-after-load 'tern
		   '(progn
		      (require 'tern-auto-complete)
		      (tern-ac-setup)))

		))
