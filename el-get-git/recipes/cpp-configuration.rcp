(:name cpp-configuration
       :type builtin
       :description "Consistent configuration for C++ coding."
       ;; TODO doxymacs
       :depends (google-c-style 
		 cmake-mode
		 llvm-mode
		 qmake-mode
		 qml-mode 
		 tff 
		 po-mode
		 emacs-clang-complete-async)
       :after (progn

		(require 'cmake-json-parser) ;; FIXME put in a different place
		(defun cmake--splice (LIST OFFSET LENGTH)
		  (butlast (nthcdr OFFSET LIST)
			   (- (length LIST) LENGTH OFFSET)))

		(defun flymake-cmake-cpp-init ()
		  (let ((compile-commands (cmake-get-compile-commands-for-current-file)))
		    (if compile-commands
			(let* ((compile-file (gethash "file" compile-commands))
			       (compile-directory (gethash "directory" compile-commands))
			       (compile-flags (split-string (mapconcat 'identity (cdr (butlast (split-string (gethash "command" compile-commands) " "))) " ")))
			       (temp-file (flymake-init-create-temp-buffer-copy 'flymake-create-temp-inplace))
			       (old-ac-cflags ac-clang-cflags))
			  (progn
			    (setq ac-clang-cflags compile-flags)
			    (if (not (eq old-ac-cflags compile-flags))
				(ac-clang-update-cmdlineargs))
			    (list "/usr/bin/clang++"
				  `("-fsyntax-only"
				    "-fno-color-diagnostics"
				    ,@compile-flags
				    ,temp-file)))))))

		(setq flymake-allowed-file-name-masks
		      (cons '(".+\\.cpp$"
			      flymake-cmake-cpp-init
			      ;; flymake-simple-cleanup
			      ;; flymake-get-real-file-name
			      )
			    flymake-allowed-file-name-masks))

		))
